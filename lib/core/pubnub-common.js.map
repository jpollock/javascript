{"version":3,"sources":["core/pubnub-common.js"],"names":["messageCountsConfig","addMessageMetadataConfig","getMessageReactions","deleteMessageMetadataConfig","setUserDataConfig","getUserDataConfig","setDeviceDataConfig","getDeviceDataConfig","deleteUserDataConfig","deleteDeviceDataConfig","addDeviceToUserConfig","removeDeviceFromUserConfig","listDevicesForUserConfig","getChannelsDataConfig","setChannelDataConfig","getChannelDataConfig","deleteChannelDataConfig","addUserToChannelConfig","removeUserFromChannelConfig","listUsersInChannelConfig","listChannelsForUserConfig","addDeviceToChannelConfig","removeDeviceFromChannelConfig","listDevicesInChannelConfig","listChannelsForDeviceConfig","addChannelsChannelGroupConfig","removeChannelsChannelGroupConfig","deleteChannelGroupConfig","listChannelGroupsConfig","listChannelsInChannelGroupConfig","addPushChannelsConfig","removePushChannelsConfig","listPushChannelsConfig","removeDevicePushConfig","presenceLeaveEndpointConfig","presenceWhereNowEndpointConfig","presenceHeartbeatEndpointConfig","presenceGetStateConfig","presenceSetStateConfig","presenceHereNowConfig","auditEndpointConfig","grantEndpointConfig","publishEndpointConfig","historyEndpointConfig","deleteMessagesEndpointConfig","fetchMessagesEndpointConfig","timeEndpointConfig","subscribeEndpointConfig","setup","db","networking","config","_config","crypto","init","modules","timeEndpoint","bind","leaveEndpoint","heartbeatEndpoint","setStateEndpoint","subscribeEndpoint","listenerManager","_listenerManager","subscriptionManager","addListener","removeListener","removeAllListeners","channelGroups","listGroups","listChannels","addChannels","removeChannels","deleteGroup","push","deleteDevice","hereNow","whereNow","getState","setState","adaptStateChange","grant","audit","publish","messageCounts","addMessageReaction","deleteMessageMetadata","setUserData","getUserData","deleteUserData","setDeviceData","getDeviceData","deleteDeviceData","addDeviceToUser","removeDeviceFromUser","listDevicesForUser","addUserToChannel","removeUserFromChannel","listUsersInChannel","listChannelsForUser","addDeviceToChannel","removeDeviceFromChannel","listDeviceInChannel","getChannelsData","setChannelData","getChannelData","deleteChannelData","fire","args","callback","replicate","storeInHistory","history","deleteMessages","fetchMessages","time","subscribe","adaptSubscribeChange","presence","adaptPresenceChange","unsubscribe","adaptUnsubscribeChange","disconnect","reconnect","destroy","isOffline","unsubscribeAll","stop","getSubscribedChannels","getSubscribedChannelGroups","encrypt","decrypt","getAuthKey","setAuthKey","setCipherKey","getUUID","setUUID","getFilterExpression","setFilterExpression","setHeartbeatInterval","hasModule","setProxy","proxy","getVersion","announceNetworkDown","restore","announceNetworkUp","createUUID","OPERATIONS","CATEGORIES"],"mappings":"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","file":"pubnub-common.js","sourcesContent":["/* @flow */\n\nimport Config from './components/config';\nimport Crypto from './components/cryptography/index';\nimport SubscriptionManager from './components/subscription_manager';\nimport ListenerManager from './components/listener_manager';\n\nimport endpointCreator from './components/endpoint';\n\n/* message data */\nimport * as messageCountsConfig from './endpoints/uuid_metadata/message_counts';\nimport * as addMessageMetadataConfig from './endpoints/uuid_metadata/set_message_metadata';\nimport * as getMessageReactions from './endpoints/uuid_metadata/get_message_metadata';\nimport * as deleteMessageMetadataConfig from './endpoints/uuid_metadata/delete_message_metadata';\n\n/* user, device, and channel data */\nimport * as setUserDataConfig from './endpoints/uuid_metadata/set_user_metadata';\nimport * as getUserDataConfig from './endpoints/uuid_metadata/get_user_metadata';\nimport * as setDeviceDataConfig from './endpoints/uuid_metadata/set_device_metadata';\nimport * as getDeviceDataConfig from './endpoints/uuid_metadata/get_device_metadata';\nimport * as deleteUserDataConfig from './endpoints/uuid_metadata/delete_user_metadata';\nimport * as deleteDeviceDataConfig from './endpoints/uuid_metadata/delete_device_metadata';\n\n\nimport * as addDeviceToUserConfig from './endpoints/uuid_metadata/add_device_to_user';\nimport * as removeDeviceFromUserConfig from './endpoints/uuid_metadata/remove_device_from_user';\nimport * as listDevicesForUserConfig from './endpoints/uuid_metadata/list_devices_for_user';\n\nimport * as getChannelsDataConfig from './endpoints/uuid_metadata/get_channels_metadata';\nimport * as setChannelDataConfig from './endpoints/uuid_metadata/set_channel_metadata';\nimport * as getChannelDataConfig from './endpoints/uuid_metadata/get_channel_metadata';\nimport * as deleteChannelDataConfig from './endpoints/uuid_metadata/delete_channel_metadata';\nimport * as addUserToChannelConfig from './endpoints/uuid_metadata/add_user_to_channel';\nimport * as removeUserFromChannelConfig from './endpoints/uuid_metadata/remove_user_from_channel';\nimport * as listUsersInChannelConfig from './endpoints/uuid_metadata/list_users_in_channel';\nimport * as listChannelsForUserConfig from './endpoints/uuid_metadata/list_channels_for_user';\nimport * as addDeviceToChannelConfig from './endpoints/uuid_metadata/add_device_to_channel';\nimport * as removeDeviceFromChannelConfig from './endpoints/uuid_metadata/remove_device_from_channel';\nimport * as listDevicesInChannelConfig from './endpoints/uuid_metadata/list_devices_in_channel';\nimport * as listChannelsForDeviceConfig from './endpoints/uuid_metadata/list_channels_for_device';\n\nimport * as addChannelsChannelGroupConfig from './endpoints/channel_groups/add_channels';\nimport * as removeChannelsChannelGroupConfig from './endpoints/channel_groups/remove_channels';\nimport * as deleteChannelGroupConfig from './endpoints/channel_groups/delete_group';\nimport * as listChannelGroupsConfig from './endpoints/channel_groups/list_groups';\nimport * as listChannelsInChannelGroupConfig from './endpoints/channel_groups/list_channels';\n\nimport * as addPushChannelsConfig from './endpoints/push/add_push_channels';\nimport * as removePushChannelsConfig from './endpoints/push/remove_push_channels';\nimport * as listPushChannelsConfig from './endpoints/push/list_push_channels';\nimport * as removeDevicePushConfig from './endpoints/push/remove_device';\n\nimport * as presenceLeaveEndpointConfig from './endpoints/presence/leave';\nimport * as presenceWhereNowEndpointConfig from './endpoints/presence/where_now';\nimport * as presenceHeartbeatEndpointConfig from './endpoints/presence/heartbeat';\nimport * as presenceGetStateConfig from './endpoints/presence/get_state';\nimport * as presenceSetStateConfig from './endpoints/presence/set_state';\nimport * as presenceHereNowConfig from './endpoints/presence/here_now';\n\nimport * as auditEndpointConfig from './endpoints/access_manager/audit';\nimport * as grantEndpointConfig from './endpoints/access_manager/grant';\n\nimport * as publishEndpointConfig from './endpoints/publish';\nimport * as historyEndpointConfig from './endpoints/history/get_history';\nimport * as deleteMessagesEndpointConfig from './endpoints/history/delete_messages';\nimport * as fetchMessagesEndpointConfig from './endpoints/fetch_messages';\nimport * as timeEndpointConfig from './endpoints/time';\nimport * as subscribeEndpointConfig from './endpoints/subscribe';\n\nimport OPERATIONS from './constants/operations';\nimport CATEGORIES from './constants/categories';\n\nimport { InternalSetupStruct } from './flow_interfaces';\nimport uuidGenerator from './components/uuid';\n\nexport default class {\n\n  _config: Config;\n  _listenerManager: ListenerManager;\n\n  // tell flow about the mounted endpoint\n  time: Function;\n  publish: Function;\n  fire: Function;\n\n  history: Function;\n  deleteMessages: Function;\n  fetchMessages: Function;\n\n  //\n  channelGroups: Object;\n  //\n  push: Object;\n  //\n  hereNow: Function;\n  whereNow: Function;\n  getState: Function;\n  setState: Function;\n  //\n  grant: Function;\n  audit: Function;\n  //\n  subscribe: Function;\n  presence: Function;\n  unsubscribe: Function;\n  unsubscribeAll: Function;\n\n  disconnect: Function;\n  reconnect: Function;\n\n\n  destroy: Function;\n  stop: Function;\n\n  getSubscribedChannels: Function;\n  getSubscribedChannelGroups: Function;\n\n  addListener: Function;\n  removeListener: Function;\n  removeAllListeners: Function;\n\n  getAuthKey: Function;\n  setAuthKey: Function;\n\n  setCipherKey: Function;\n  setUUID: Function;\n  getUUID: Function;\n\n  getFilterExpression: Function;\n  setFilterExpression: Function;\n\n  setHeartbeatInterval: Function;\n\n  setProxy: Function;\n\n  encrypt: Function;\n  decrypt: Function;\n\n  //\n\n  constructor(setup: InternalSetupStruct) {\n    let { db, networking } = setup;\n\n    const config = this._config = new Config({ setup, db });\n    const crypto = new Crypto({ config });\n    networking.init(config);\n\n    let modules = { config, networking, crypto };\n    const timeEndpoint = endpointCreator.bind(this, modules, timeEndpointConfig);\n    const leaveEndpoint = endpointCreator.bind(this, modules, presenceLeaveEndpointConfig);\n    const heartbeatEndpoint = endpointCreator.bind(this, modules, presenceHeartbeatEndpointConfig);\n    const setStateEndpoint = endpointCreator.bind(this, modules, presenceSetStateConfig);\n    const subscribeEndpoint = endpointCreator.bind(this, modules, subscribeEndpointConfig);\n\n    // managers\n    const listenerManager = this._listenerManager = new ListenerManager();\n\n    const subscriptionManager = new SubscriptionManager({\n      timeEndpoint,\n      leaveEndpoint,\n      heartbeatEndpoint,\n      setStateEndpoint,\n      subscribeEndpoint,\n      crypto: modules.crypto,\n      config: modules.config,\n      listenerManager\n    });\n\n    this.addListener = listenerManager.addListener.bind(listenerManager);\n    this.removeListener = listenerManager.removeListener.bind(listenerManager);\n    this.removeAllListeners = listenerManager.removeAllListeners.bind(listenerManager);\n\n    /* channel groups */\n    this.channelGroups = {\n      listGroups: endpointCreator.bind(this, modules, listChannelGroupsConfig),\n      listChannels: endpointCreator.bind(this, modules, listChannelsInChannelGroupConfig),\n      addChannels: endpointCreator.bind(this, modules, addChannelsChannelGroupConfig),\n      removeChannels: endpointCreator.bind(this, modules, removeChannelsChannelGroupConfig),\n      deleteGroup: endpointCreator.bind(this, modules, deleteChannelGroupConfig)\n    };\n    /* push */\n    this.push = {\n      addChannels: endpointCreator.bind(this, modules, addPushChannelsConfig),\n      removeChannels: endpointCreator.bind(this, modules, removePushChannelsConfig),\n      deleteDevice: endpointCreator.bind(this, modules, removeDevicePushConfig),\n      listChannels: endpointCreator.bind(this, modules, listPushChannelsConfig)\n    };\n    /* presence */\n    this.hereNow = endpointCreator.bind(this, modules, presenceHereNowConfig);\n    this.whereNow = endpointCreator.bind(this, modules, presenceWhereNowEndpointConfig);\n    this.getState = endpointCreator.bind(this, modules, presenceGetStateConfig);\n    this.setState = subscriptionManager.adaptStateChange.bind(subscriptionManager);\n    /* PAM */\n    this.grant = endpointCreator.bind(this, modules, grantEndpointConfig);\n    this.audit = endpointCreator.bind(this, modules, auditEndpointConfig);\n    //\n    this.publish = endpointCreator.bind(this, modules, publishEndpointConfig);\n\n    this.messageCounts = endpointCreator.bind(this, modules, messageCountsConfig);\n    this.addMessageReaction = endpointCreator.bind(this, modules, addMessageMetadataConfig);\n    this.getMessageReactions = endpointCreator.bind(this, modules, getMessageReactions);\n    this.deleteMessageMetadata = endpointCreator.bind(this, modules, deleteMessageMetadataConfig);\n    this.setUserData = endpointCreator.bind(this, modules, setUserDataConfig);\n    this.getUserData = endpointCreator.bind(this, modules, getUserDataConfig);\n    this.deleteUserData = endpointCreator.bind(this, modules, deleteUserDataConfig);\n    this.setDeviceData = endpointCreator.bind(this, modules, setDeviceDataConfig);\n    this.getDeviceData = endpointCreator.bind(this, modules, getDeviceDataConfig);\n    this.deleteDeviceData = endpointCreator.bind(this, modules, deleteDeviceDataConfig);\n    this.addDeviceToUser = endpointCreator.bind(this, modules, addDeviceToUserConfig);\n    this.removeDeviceFromUser = endpointCreator.bind(this, modules, removeDeviceFromUserConfig);\n    this.listDevicesForUser = endpointCreator.bind(this, modules, listDevicesForUserConfig);\n\n    /*\n    this.addUuidToChannelGroup = endpointCreator.default.bind(this, modules, addUuidToChannelGroupConfig);\n    this.removeUuidFromChannelGroup = endpointCreator.default.bind(this, modules, removeUuidFromChannelGroupConfig);\n    this.listUuidsInChannelGroup = endpointCreator.default.bind(this, modules, listUuidsInChannelGroupConfig);\n    this.setChannelGroupMetadata = endpointCreator.default.bind(this, modules, setChannelGroupMetadataConfig);\n    this.getChannelGroupMetadata = endpointCreator.default.bind(this, modules, getChannelGroupMetadataConfig);\n    this.deleteChannelGroupMetadata = endpointCreator.default.bind(this, modules, deleteChannelGroupMetadataConfig);\n    */\n    this.addUserToChannel = endpointCreator.bind(this, modules, addUserToChannelConfig);\n    this.removeUserFromChannel = endpointCreator.bind(this, modules, removeUserFromChannelConfig);\n    this.listUsersInChannel = endpointCreator.bind(this, modules, listUsersInChannelConfig);\n    this.listChannelsForUser = endpointCreator.bind(this, modules, listChannelsForUserConfig);\n    this.addDeviceToChannel = endpointCreator.bind(this, modules, addDeviceToChannelConfig);\n    this.removeDeviceFromChannel = endpointCreator.bind(this, modules, removeDeviceFromChannelConfig);\n    this.listDeviceInChannel = endpointCreator.bind(this, modules, listDevicesInChannelConfig);\n    this.listDevicesForUser = endpointCreator.bind(this, modules, listChannelsForDeviceConfig);\n    this.getChannelsData = endpointCreator.bind(this, modules, getChannelsDataConfig);\n    this.setChannelData = endpointCreator.bind(this, modules, setChannelDataConfig);\n    this.getChannelData = endpointCreator.bind(this, modules, getChannelDataConfig);\n    this.deleteChannelData = endpointCreator.bind(this, modules, deleteChannelDataConfig);\n    \n    this.fire = (args, callback) => {\n      args.replicate = false;\n      args.storeInHistory = false;\n      return this.publish(args, callback);\n    };\n\n    this.history = endpointCreator.bind(this, modules, historyEndpointConfig);\n    this.deleteMessages = endpointCreator.bind(this, modules, deleteMessagesEndpointConfig);\n    this.fetchMessages = endpointCreator.bind(this, modules, fetchMessagesEndpointConfig);\n\n    this.time = timeEndpoint;\n\n    // subscription related methods\n    this.subscribe = subscriptionManager.adaptSubscribeChange.bind(subscriptionManager);\n    this.presence = subscriptionManager.adaptPresenceChange.bind(subscriptionManager);\n    this.unsubscribe = subscriptionManager.adaptUnsubscribeChange.bind(subscriptionManager);\n    this.disconnect = subscriptionManager.disconnect.bind(subscriptionManager);\n    this.reconnect = subscriptionManager.reconnect.bind(subscriptionManager);\n\n    this.destroy = (isOffline: boolean) => {\n      subscriptionManager.unsubscribeAll(isOffline);\n      subscriptionManager.disconnect();\n    };\n\n    // --- deprecated  ------------------\n    this.stop = this.destroy; // --------\n    // --- deprecated  ------------------\n\n    this.unsubscribeAll = subscriptionManager.unsubscribeAll.bind(subscriptionManager);\n\n    this.getSubscribedChannels = subscriptionManager.getSubscribedChannels.bind(subscriptionManager);\n    this.getSubscribedChannelGroups = subscriptionManager.getSubscribedChannelGroups.bind(subscriptionManager);\n\n    // mount crypto\n    this.encrypt = crypto.encrypt.bind(crypto);\n    this.decrypt = crypto.decrypt.bind(crypto);\n\n    /* config */\n    this.getAuthKey = modules.config.getAuthKey.bind(modules.config);\n    this.setAuthKey = modules.config.setAuthKey.bind(modules.config);\n    this.setCipherKey = modules.config.setCipherKey.bind(modules.config);\n    this.getUUID = modules.config.getUUID.bind(modules.config);\n    this.setUUID = modules.config.setUUID.bind(modules.config);\n    this.getFilterExpression = modules.config.getFilterExpression.bind(modules.config);\n    this.setFilterExpression = modules.config.setFilterExpression.bind(modules.config);\n\n    this.setHeartbeatInterval = modules.config.setHeartbeatInterval.bind(modules.config);\n\n    if (networking.hasModule('proxy')) {\n      this.setProxy = (proxy) => {\n        modules.config.setProxy(proxy);\n        this.reconnect();\n      };\n    }\n  }\n\n\n  getVersion(): string {\n    return this._config.getVersion();\n  }\n\n  // network hooks to indicate network changes\n  networkDownDetected() {\n    this._listenerManager.announceNetworkDown();\n\n    if (this._config.restore) {\n      this.disconnect();\n    } else {\n      this.destroy(true);\n    }\n  }\n\n  networkUpDetected() {\n    this._listenerManager.announceNetworkUp();\n    this.reconnect();\n  }\n\n\n  static generateUUID(): string {\n    return uuidGenerator.createUUID();\n  }\n\n  static OPERATIONS = OPERATIONS;\n  static CATEGORIES = CATEGORIES;\n\n}\n"]}