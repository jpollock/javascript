{"version":3,"sources":["core/endpoints/uuid_metadata/remove_user_from_channel.js"],"names":["useDelete","getOperation","validateParams","deleteURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","PNUuidMetadataCreate","modules","incomingParams","channel","config","subscribeKey","uuid","getTransactionTimeout","name","description","params"],"mappings":";;;;;QAMgBA,S,GAAAA,S;QAKAC,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAQAC,S,GAAAA,S;QAOAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAQAC,c,GAAAA,c;;AA5ChB;;AACA;;;;AACA;;;;;;AAEO,SAASP,SAAT,GAAqB;AAC1B,SAAO,IAAP;AACD;;AAGM,SAASC,YAAT,GAAgC;AACrC,SAAO,qBAAmBO,oBAA1B;AACD;;AAEM,SAASN,cAAT,CAAwBO,OAAxB,EAAgDC,cAAhD,EAA0F;AAAA,MACzFC,OADyF,GAC7ED,cAD6E,CACzFC,OADyF;AAAA,MAEzFC,MAFyF,GAE9EH,OAF8E,CAEzFG,MAFyF;;;AAI/F,MAAI,CAACD,OAAL,EAAc,OAAO,kBAAP;AACd,MAAI,CAACC,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASV,SAAT,CAAmBM,OAAnB,EAA2CC,cAA3C,EAA6F;AAAA,MAC5FC,OAD4F,GAC1ED,cAD0E,CAC5FC,OAD4F;AAAA,MACnFG,IADmF,GAC1EJ,cAD0E,CACnFI,IADmF;AAAA,MAE5FF,MAF4F,GAEjFH,OAFiF,CAE5FG,MAF4F;;;AAIlG,+BAA2BA,OAAOC,YAAlC,gBAAyDF,OAAzD,eAA0EG,IAA1E;AACD;;AAEM,SAASV,iBAAT,OAA8D;AAAA,MAAjCQ,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOG,qBAAP,EAAP;AACD;;AAEM,SAASV,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBG,OAAvB,EAA+CC,cAA/C,EAAiG;AAAA,MAChGM,IADgG,GAC3EN,cAD2E,CAChGM,IADgG;AAAA,MAC1FC,WAD0F,GAC3EP,cAD2E,CAC1FO,WAD0F;;AAEtG,MAAMC,SAAS,EAAf;;AAIA,SAAOA,MAAP;AACD;AACM,SAASX,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"remove_user_from_channel.js","sourcesContent":["/* @flow */\n\nimport { AddChannelParams, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function useDelete() {\n  return true;\n}\n\n\nexport function getOperation(): string {\n  return operationConstants.PNUuidMetadataCreate;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: CreateUuidMetadataParams) {\n  let { channel } = incomingParams;\n  let { config } = modules;\n\n  if (!channel) return 'Missing Channels';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function deleteURL(modules: ModulesInject, incomingParams: CreateUuidMetadataParams): string {\n  let { channel, uuid } = incomingParams;\n  let { config } = modules;\n\n  return `/v1/objects/${config.subscribeKey}/spaces/${channel}/users/${uuid}`\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: CreateUuidMetadataParams): Object {\n  let { name, description} = incomingParams;\n  const params = {};\n\n  //params.state = JSON.stringify(state);\n\n  return params;\n}\nexport function handleResponse(): Object {\n  return {};\n}\n"]}