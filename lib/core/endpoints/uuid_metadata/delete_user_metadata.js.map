{"version":3,"sources":["core/endpoints/uuid_metadata/delete_user_metadata.js"],"names":["useDelete","getOperation","validateParams","deleteURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","operationConstants","PNUuidMetadataCreate","modules","incomingParams","uuid","config","subscribeKey","getTransactionTimeout","name","description","params"],"mappings":";;;;;QAMgBA,S,GAAAA,S;QAKAC,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAQAC,S,GAAAA,S;QAOAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAQAC,c,GAAAA,c;;AA5ChB;;AACA;;;;AACA;;;;;;AAEO,SAASP,SAAT,GAAqB;AAC1B,SAAO,IAAP;AACD;;AAGM,SAASC,YAAT,GAAgC;AACrC,SAAOO,qBAAmBC,oBAA1B;AACD;;AAEM,SAASP,cAAT,CAAwBQ,OAAxB,EAAgDC,cAAhD,EAA0F;AAAA,MACzFC,IADyF,GAChFD,cADgF,CACzFC,IADyF;AAAA,MAEzFC,MAFyF,GAE9EH,OAF8E,CAEzFG,MAFyF;;;AAI/F,MAAI,CAACD,IAAL,EAAW,OAAO,cAAP;AACX,MAAI,CAACC,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASX,SAAT,CAAmBO,OAAnB,EAA2CC,cAA3C,EAA6F;AAAA,MAC5FC,IAD4F,GACnFD,cADmF,CAC5FC,IAD4F;AAAA,MAE5FC,MAF4F,GAEjFH,OAFiF,CAE5FG,MAF4F;;;AAIlG,0BAAsBA,OAAOC,YAA7B,eAAmDF,IAAnD;AACD;;AAEM,SAASR,iBAAT,OAA8D;AAAA,MAAjCS,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOE,qBAAP,EAAP;AACD;;AAEM,SAASV,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBI,OAAvB,EAA+CC,cAA/C,EAAiG;AAAA,MAChGK,IADgG,GAC3EL,cAD2E,CAChGK,IADgG;AAAA,MAC1FC,WAD0F,GAC3EN,cAD2E,CAC1FM,WAD0F;;AAEtG,MAAMC,SAAS,EAAf;;AAIA,SAAOA,MAAP;AACD;AACM,SAASX,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"delete_user_metadata.js","sourcesContent":["/* @flow */\n\nimport { AddChannelParams, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function useDelete() {\n  return true;\n}\n\n\nexport function getOperation(): string {\n  return operationConstants.PNUuidMetadataCreate;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: CreateUuidMetadataParams) {\n  let { uuid } = incomingParams;\n  let { config } = modules;\n\n  if (!uuid) return 'Missing UUID';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function deleteURL(modules: ModulesInject, incomingParams: CreateUuidMetadataParams): string {\n  let { uuid } = incomingParams;\n  let { config } = modules;\n  \n  return `/v1/objects/${config.subscribeKey}/users/${uuid}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: CreateUuidMetadataParams): Object {\n  let { name, description} = incomingParams;\n  const params = {};\n\n  //params.state = JSON.stringify(state);\n\n  return params;\n}\nexport function handleResponse(): Object {\n  return {};\n}\n"]}