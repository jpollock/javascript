{"version":3,"sources":["core/endpoints/uuid_metadata/get_channels_metadata.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","PNUuidMetadataCreate","modules","incomingParams","config","subscribeKey","getTransactionTimeout","name","description","params","serverResponse"],"mappings":";;;;;QAOgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAKAC,M,GAAAA,M;QAMAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAQAC,c,GAAAA,c;;AApChB;;AACA;;;;AACA;;;;;;AAGO,SAASN,YAAT,GAAgC;AACrC,SAAO,qBAAmBO,oBAA1B;AACD;;AAEM,SAASN,cAAT,CAAwBO,OAAxB,EAAgDC,cAAhD,EAA0F;AAAA,MACzFC,MADyF,GAC9EF,OAD8E,CACzFE,MADyF;;AAE/F,MAAI,CAACA,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAAST,MAAT,CAAgBM,OAAhB,EAAwCC,cAAxC,EAA0F;AAAA,MACzFC,MADyF,GAC9EF,OAD8E,CACzFE,MADyF;;;AAG/F,+BAA2BA,OAAOC,YAAlC;AACD;;AAEM,SAASR,iBAAT,OAA8D;AAAA,MAAjCO,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOE,qBAAP,EAAP;AACD;;AAEM,SAASR,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBG,OAAvB,EAA+CC,cAA/C,EAAiG;AAAA,MAChGI,IADgG,GAC3EJ,cAD2E,CAChGI,IADgG;AAAA,MAC1FC,WAD0F,GAC3EL,cAD2E,CAC1FK,WAD0F;;AAEtG,MAAMC,SAAS,EAAf;;AAIA,SAAOA,MAAP;AACD;AACM,SAAST,cAAT,CAAwBE,OAAxB,EAAgDQ,cAAhD,EAAgF;AACrF,SAAOA,cAAP;AACD","file":"get_channels_metadata.js","sourcesContent":["/* @flow */\n\nimport { AddChannelParams, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\n\nexport function getOperation(): string {\n  return operationConstants.PNUuidMetadataCreate;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: CreateUuidMetadataParams) {\n  let { config } = modules;\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: CreateUuidMetadataParams): string {\n  let { config } = modules;\n\n  return `/v1/data/sub-key/${config.subscribeKey}/spaces`\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: CreateUuidMetadataParams): Object {\n  let { name, description} = incomingParams;\n  const params = {};\n\n  //params.state = JSON.stringify(state);\n\n  return params;\n}\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): Object {\n  return serverResponse;\n}\n"]}