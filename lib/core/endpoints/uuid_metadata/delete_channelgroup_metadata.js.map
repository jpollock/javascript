{"version":3,"sources":["core/endpoints/uuid_metadata/delete_channelgroup_metadata.js"],"names":["useDelete","getOperation","validateParams","deleteURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","PNUuidMetadataCreate","modules","incomingParams","channels","channelGroup","config","length","subscribeKey","uuid","getTransactionTimeout","name","description","params"],"mappings":";;;;;QAMgBA,S,GAAAA,S;QAKAC,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QASAC,S,GAAAA,S;QAOAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAQAC,c,GAAAA,c;;AA7ChB;;AACA;;;;AACA;;;;;;AAEO,SAASP,SAAT,GAAqB;AAC1B,SAAO,IAAP;AACD;;AAGM,SAASC,YAAT,GAAgC;AACrC,SAAO,qBAAmBO,oBAA1B;AACD;;AAEM,SAASN,cAAT,CAAwBO,OAAxB,EAAgDC,cAAhD,EAA0F;AAAA,MACzFC,QADyF,GAC9DD,cAD8D,CACzFC,QADyF;AAAA,MAC/EC,YAD+E,GAC9DF,cAD8D,CAC/EE,YAD+E;AAAA,MAEzFC,MAFyF,GAE9EJ,OAF8E,CAEzFI,MAFyF;;;AAI/F,MAAI,CAACD,YAAL,EAAmB,OAAO,uBAAP;AACnB,MAAI,CAACD,QAAD,IAAaA,SAASG,MAAT,KAAoB,CAArC,EAAwC,OAAO,kBAAP;AACxC,MAAI,CAACD,OAAOE,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASZ,SAAT,CAAmBM,OAAnB,EAA2CC,cAA3C,EAA6F;AAAA,MAC5FM,IAD4F,GACnFN,cADmF,CAC5FM,IAD4F;AAAA,MAE5FH,MAF4F,GAEjFJ,OAFiF,CAE5FI,MAF4F;;;AAIlG,SAAO,sDAAP;AACD;;AAEM,SAAST,iBAAT,OAA8D;AAAA,MAAjCS,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOI,qBAAP,EAAP;AACD;;AAEM,SAASZ,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBG,OAAvB,EAA+CC,cAA/C,EAAiG;AAAA,MAChGQ,IADgG,GAC3ER,cAD2E,CAChGQ,IADgG;AAAA,MAC1FC,WAD0F,GAC3ET,cAD2E,CAC1FS,WAD0F;;AAEtG,MAAMC,SAAS,EAAf;;AAIA,SAAOA,MAAP;AACD;AACM,SAASb,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"delete_channelgroup_metadata.js","sourcesContent":["/* @flow */\n\nimport { AddChannelParams, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function useDelete() {\n  return true;\n}\n\n\nexport function getOperation(): string {\n  return operationConstants.PNUuidMetadataCreate;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: CreateUuidMetadataParams) {\n  let { channels, channelGroup } = incomingParams;\n  let { config } = modules;\n\n  if (!channelGroup) return 'Missing Channel Group';\n  if (!channels || channels.length === 0) return 'Missing Channels';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function deleteURL(modules: ModulesInject, incomingParams: CreateUuidMetadataParams): string {\n  let { uuid } = incomingParams;\n  let { config } = modules;\n\n  return '/v1/objects/${config.subscribeKey}/uuid/{$uuid}'\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: CreateUuidMetadataParams): Object {\n  let { name, description} = incomingParams;\n  const params = {};\n\n  //params.state = JSON.stringify(state);\n\n  return params;\n}\nexport function handleResponse(): Object {\n  return {};\n}\n"]}