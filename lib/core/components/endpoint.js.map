{"version":3,"sources":["core/components/endpoint.js"],"names":["modules","endpoint","networking","config","callback","promiseComponent","incomingParams","getOperation","operationConstants","PNTimeOperation","PNChannelGroupsOperation","Promise","utils","createPromise","validationResult","validateParams","createValidationError","reject","PubNubError","promise","outgoingParams","prepareParams","url","decideURL","callInstance","networkingParams","operation","timeout","getRequestTimeout","uuid","UUID","pnsdk","generatePNSDK","useInstanceId","instanceid","instanceId","useRequestId","requestid","uuidGenerator","createUUID","isAuthSupported","getAuthKey","auth","secretKey","signRequest","onResponse","status","payload","error","parsedPayload","handleResponse","fulfill","usePost","postPayload","POST","usePut","PUT","usePatch","PATCH","useDelete","DELETE","GET","PNSubscribeOperation","message","name","constructor","Error","createError","errorPayload","type","postURL","putURL","patchURL","deleteURL","getURL","sdkName","base","sdkFamily","partnerId","getVersion","crypto","timestamp","Math","floor","Date","getTime","signInput","subscribeKey","publishKey","signPamFromParams","signature","HMACSHA256","replace"],"mappings":"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","file":"endpoint.js","sourcesContent":["import uuidGenerator from './uuid';\nimport { StatusAnnouncement } from '../flow_interfaces';\nimport utils from '../utils';\nimport Config from './config';\nimport operationConstants from '../constants/operations';\n\nclass PubNubError extends Error {\n  constructor(message, status) {\n    super(message);\n    this.name = this.constructor.name;\n    this.status = status;\n    this.message = message;\n  }\n}\n\nfunction createError(errorPayload: Object, type: string): Object {\n  errorPayload.type = type;\n  errorPayload.error = true;\n  return errorPayload;\n}\n\nfunction createValidationError(message: string): Object {\n  return createError({ message }, 'validationError');\n}\n\nfunction decideURL(endpoint, modules, incomingParams) {\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    return endpoint.postURL(modules, incomingParams);\n  } else if (endpoint.usePut && endpoint.usePut(modules, incomingParams)) {\n    return endpoint.putURL(modules, incomingParams);\n  } else if (endpoint.usePatch && endpoint.usePatch(modules, incomingParams)) {\n    return endpoint.patchURL(modules, incomingParams);\n  } else if (endpoint.useDelete && endpoint.useDelete(modules, incomingParams)) {\n    return endpoint.deleteURL(modules, incomingParams);\n  } else {\n    return endpoint.getURL(modules, incomingParams);\n  }\n}\n\nfunction generatePNSDK(config: Config): string {\n  if (config.sdkName) {\n    return config.sdkName;\n  }\n\n  let base = `PubNub-JS-${config.sdkFamily}`;\n\n  if (config.partnerId) {\n    base += `-${config.partnerId}`;\n  }\n\n  base += `/${config.getVersion()}`;\n\n  return base;\n}\n\nfunction signRequest(modules, url, outgoingParams) {\n  let { config, crypto } = modules;\n\n  outgoingParams.timestamp = Math.floor(new Date().getTime() / 1000);\n  let signInput = `${config.subscribeKey}\\n${config.publishKey}\\n${url}\\n`;\n  signInput += utils.signPamFromParams(outgoingParams);\n\n  let signature = crypto.HMACSHA256(signInput);\n  signature = signature.replace(/\\+/g, '-');\n  signature = signature.replace(/\\//g, '_');\n\n  outgoingParams.signature = signature;\n}\n\nexport default function (modules, endpoint, ...args) {\n  let { networking, config } = modules;\n  let callback = null;\n  let promiseComponent = null;\n  let incomingParams = {};\n\n  if (endpoint.getOperation() === operationConstants.PNTimeOperation || endpoint.getOperation() === operationConstants.PNChannelGroupsOperation) {\n    callback = args[0];\n  } else {\n    incomingParams = args[0];\n    callback = args[1];\n  }\n\n  // bridge in Promise support.\n  if (typeof Promise !== 'undefined' && !callback) {\n    promiseComponent = utils.createPromise();\n  }\n\n  let validationResult = endpoint.validateParams(modules, incomingParams);\n\n  if (validationResult) {\n    if (callback) {\n      return callback(createValidationError(validationResult));\n    } else if (promiseComponent) {\n      promiseComponent.reject(new PubNubError('Validation failed, check status for details', createValidationError(validationResult)));\n      return promiseComponent.promise;\n    }\n    return;\n  }\n\n  let outgoingParams = endpoint.prepareParams(modules, incomingParams);\n  let url = decideURL(endpoint, modules, incomingParams);\n  let callInstance;\n  let networkingParams = { url,\n    operation: endpoint.getOperation(),\n    timeout: endpoint.getRequestTimeout(modules)\n  };\n\n  outgoingParams.uuid = config.UUID;\n  outgoingParams.pnsdk = generatePNSDK(config);\n\n  if (config.useInstanceId) {\n    outgoingParams.instanceid = config.instanceId;\n  }\n\n  if (config.useRequestId) {\n    outgoingParams.requestid = uuidGenerator.createUUID();\n  }\n\n  if (endpoint.isAuthSupported() && config.getAuthKey()) {\n    outgoingParams.auth = config.getAuthKey();\n  }\n\n  if (config.secretKey) {\n    signRequest(modules, url, outgoingParams);\n  }\n\n  let onResponse = (status: StatusAnnouncement, payload: Object) => {\n    if (status.error) {\n      if (callback) {\n        callback(status);\n      } else if (promiseComponent) {\n        promiseComponent.reject(new PubNubError('PubNub call failed, check status for details', status));\n      }\n      return;\n    }\n\n    let parsedPayload = endpoint.handleResponse(modules, payload, incomingParams);\n\n    if (callback) {\n      callback(status, parsedPayload);\n    } else if (promiseComponent) {\n      promiseComponent.fulfill(parsedPayload);\n    }\n  };\n\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    callInstance = networking.POST(outgoingParams, payload, networkingParams, onResponse);\n  } else if (endpoint.usePut && endpoint.usePut()) {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    callInstance = networking.PUT(outgoingParams, payload, networkingParams, onResponse);\n  } else if (endpoint.usePatch && endpoint.usePatch()) {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    callInstance = networking.PATCH(outgoingParams, payload, networkingParams, onResponse);\n  } else if (endpoint.useDelete && endpoint.useDelete()) {\n    callInstance = networking.DELETE(outgoingParams, networkingParams, onResponse);\n  } else {\n    callInstance = networking.GET(outgoingParams, networkingParams, onResponse);\n  }\n  \n  if (endpoint.getOperation() === operationConstants.PNSubscribeOperation) {\n    return callInstance;\n  }\n\n  if (promiseComponent) {\n    return promiseComponent.promise;\n  }\n}\n"]}